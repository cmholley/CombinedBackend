<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans	
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

	<import resource="webSecurityConfig.xml" />

	<context:component-scan base-package="dash.*" />

	<!-- ************ JPA configuration *********** -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:config/persistence-dash.xml" />
		<property name="persistenceUnitName" value="dashPersistenceCHW" />
		<property name="dataSource" ref="datasource" />
		<property name="packagesToScan" value="dash.*" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
				<property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" />
			</bean>
		</property>
	</bean>

	<bean id="datasource" class="dash.multitenancy.TenantRoutingDatasource">
		<property name="targetDataSources">
			<map key-type="java.lang.String">
				<entry key="tenantCHW" value-ref="dashDS_CHW" />
				<entry key="tenantVMA" value-ref="dashDS_VMA" />
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dashDS_CHW" />
	</bean>

	<bean id="dashDS_CHW" class="org.springframework.jndi.JndiObjectFactoryBean"
		scope="singleton">
		<property name="jndiName" value="java:comp/env/jdbc/dashDB_CHW" />
		<property name="resourceRef" value="true" />
	</bean>

	<bean id="dashDS_VMA" class="org.springframework.jndi.JndiObjectFactoryBean"
		scope="singleton">
		<property name="jndiName" value="java:comp/env/jdbc/dashDB_VMA" />
		<property name="resourceRef" value="true" />
	</bean>


	<bean id="userDao" class="dash.dao.UserDaoJPA2Impl" />
	<bean id="userService" class="dash.service.UserServiceDbAccessImpl" />
	<bean id="userResource" class="dash.pojo.UsersResource" />

	<bean id="groupDao" class="dash.dao.GroupDaoJPA2Impl" />
	<bean id="groupService" class="dash.service.GroupServiceDbAccessImpl" />
	<bean id="groupSwitch" class="dash.tran.GroupSwitch"/> 
	<bean id="groupTran" class="dash.tran.GroupTransactionImpl"/> 
	<bean id="groupResource" class="dash.pojo.GroupResource" />

	<bean id="taskDao" class="dash.dao.TaskDaoJPA2Impl" />
	<bean id="taskService" class="dash.service.TaskServiceDbAccessImpl" />
	<bean id="taskSwitch" class="dash.tran.TaskSwitch"/> 
	<bean id="taskTran" class="dash.tran.TaskTransactionImpl"/> 
	<bean id="taskResource" class="dash.pojo.TaskResource" />

	<bean id="postDao" class="dash.dao.PostDaoJPA2Impl" />
	<bean id="postService" class="dash.service.PostServiceDbAccessImpl" />
	<bean id="postSwitch" class="dash.tran.PostSwitch"/> 
	<bean id="postTran" class="dash.tran.PostTransactionImpl"/>
	<bean id="postResource" class="dash.pojo.PostResource" />

	<bean id="commentDao" class="dash.dao.CommentDaoJPA2Impl" />
	<bean id="commentService" class="dash.service.CommentServiceDbAccessImpl" />
	<bean id="commentSwitch" class="dash.tran.CommentSwitch" />
	<bean id="commentTran" class="dash.tran.CommentTransactionImpl" />
	<bean id="commentResource" class="dash.pojo.CommentResource" />

	<bean id="messageDao" class="dash.dao.MessageDaoJPA2Impl" />
	<bean id="messageService" class="dash.service.MessageServiceDbAccessImpl" />
	<bean id="messageSwitch" class="dash.tran.MessageSwitch"/> 
	<bean id="messageTran" class="dash.tran.MessageTransactionImpl"/>
	<bean id="messageResource" class="dash.pojo.MessageResource" />

	<bean id="hourDao" class="dash.dao.HourDaoJPA2Impl" />
	<bean id="hourService" class="dash.service.HourServiceDbAccessImpl" />
	<bean id="hourSwitch" class="dash.tran.HourSwitch"/> 
	<bean id="hourTran" class="dash.tran.HourTransactionImpl"/>
	<bean id="hourResource" class="dash.pojo.HourResource" />

	<bean id="locationDao" class="dash.dao.LocationDaoJPA2Impl" />
	<bean id="locationService" class="dash.service.LocationServiceDbAccessImpl" />
	<bean id="locationSwitch" class="dash.tran.LocationSwitch"/> 
	<bean id="locationTran" class="dash.tran.LocationTransactionImpl"/>
	<bean id="locationResource" class="dash.pojo.LocationResource" />

	<bean id="classDao" class="dash.dao.ClassDaoJPA2Impl" />
	<bean id="classService" class="dash.service.ClassServiceDbAccessImpl" />
	<bean id="classSwitch" class="dash.tran.ClassSwitch"/> 
	<bean id="classTran" class="dash.tran.ClassTransactionImpl"/> 
	<bean id="classResource" class="dash.pojo.ClassResource" />


	<bean id="aclController" class="dash.security.GenericAclController" />

	<!-- ************ Email Beans *********** -->

	<!-- Due to a lack of a local email host, a gmail connection is provided 
		for local development. If the server has a mail client enabled, use the mailSender 
		bean that connects to localhost rather than to the gmail -->

	<!-- For the server -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="localhost" />
		<property name="port" value="25" />
		<property name="protocol" value="smtp" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtps.auth">false</prop>
				<prop key="mail.smtp.ssl.enable">false</prop>
				<prop key="mail.transport.protocol">smtp</prop>
			</props>
		</property>
	</bean>

	<!--For local development -->

	<!--<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="smtp.gmail.com" /> <property name="port" value="465" 
		/> <property name="username" value="formbuildertest@gmail.com" /> <property 
		name="password" value="test1234test" /> <property name="protocol" value="smtps" 
		/> <property name="javaMailProperties"> <props> <prop key="mail.smtps.auth">true</prop> 
		<prop key="mail.smtp.ssl.enable">true</prop> <prop key="mail.transport.protocol">smtps</prop> 
		</props> </property> </bean> -->

	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="formbuildertest@gmail.com" />
		<property name="subject" value="Test" />
	</bean>
</beans>